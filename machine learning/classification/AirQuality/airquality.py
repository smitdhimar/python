# -*- coding: utf-8 -*-
"""airQuality.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wC3EWswCtdjA81vd392lD6usR0fJmtKm

importing important libraries
"""

import numpy as np;
import pandas as pd
from sklearn.metrics import accuracy_score;
from sklearn.model_selection import train_test_split;
import seaborn as sns

"""loading the dataset"""

dataset=pd.read_csv('./updated_pollution_dataset.csv');

"""analysis of dataset"""

print(dataset.describe());
print(dataset.isna().sum());
print(dataset['Air Quality'])

sns.pairplot(dataset, hue='Air Quality')

"""splitting the data"""

X=dataset.drop(columns=['Air Quality']);
y=dataset['Air Quality'];

trainX,testX,trainY,testY=train_test_split(X,y, random_state=30, test_size=0.3)

"""Now trying to use feature selection for getting better accuracy , here I will use the bestKScore algorithm and apply chi2 score function to it"""

from sklearn.feature_selection import SelectKBest, chi2, f_classif
selector=SelectKBest(score_func=f_classif, k=8)
trainX=selector.fit_transform(trainX,trainY)
testX=selector.transform(testX)

"""it seems like that i should first go with the random forest classifier"""

from sklearn.ensemble import RandomForestClassifier

model=RandomForestClassifier();
model.fit(trainX,trainY)

predY=model.predict(testX);
print("accuracy: ", accuracy_score(predY,testY))

"""Now trying decision tree"""

from sklearn.tree import DecisionTreeClassifier
model=DecisionTreeClassifier()
model.fit(trainX,trainY)

predY=model.predict(testX);
print("accuracy: ", accuracy_score(predY,testY))

"""Now trying knn"""

from sklearn.neighbors import KNeighborsClassifier
model=KNeighborsClassifier();
model.fit(trainX,trainY)

"""Prediction and score comparison"""

predY=model.predict(testX);
print("accuracy: ", accuracy_score(predY,testY))

"""After trying all three models, Got the highest priority in RandomForestClassifier of .953, in decision tree got .89 and in knn .78"""